<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hand.idea.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.hand.idea.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email_state_id" jdbcType="INTEGER" property="emailStateId" />
    <result column="nike_name" jdbcType="VARCHAR" property="nikeName" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="head_photo" jdbcType="VARCHAR" property="headPhoto" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <resultMap id="WithEventResultMap" type="com.hand.idea.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email_state_id" jdbcType="INTEGER" property="emailStateId" />
    <result column="nike_name" jdbcType="VARCHAR" property="nikeName" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="head_photo" jdbcType="VARCHAR" property="headPhoto" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <collection property="events" ofType="com.hand.idea.domain.Event">
      <id column="eid" jdbcType="INTEGER" property="id" />
      <result column="founderId" jdbcType="INTEGER" property="founderid" />
      <result column="title" jdbcType="VARCHAR" property="title" />
      <result column="type" jdbcType="INTEGER" property="type" />
      <result column="photoName" jdbcType="VARCHAR" property="photoname" />
      <result column="province" jdbcType="VARCHAR" property="province" />
      <result column="city" jdbcType="VARCHAR" property="city" />
      <result column="detailedDescription" jdbcType="VARCHAR" property="detaileddescription" />
      <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
      <result column="stateId" jdbcType="INTEGER" property="stateid" />
      <result column="instruction" jdbcType="VARCHAR" property="instruction" />
      <result column="support" jdbcType="INTEGER" property="support" />
    </collection>
  </resultMap>
  <resultMap id="HobbyResultMap" type="com.hand.idea.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email_state_id" jdbcType="INTEGER" property="emailStateId" />
    <result column="nike_name" jdbcType="VARCHAR" property="nikeName" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="head_photo" jdbcType="VARCHAR" property="headPhoto" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <collection property="hobbyList" ofType="com.hand.idea.domain.Hobby">
      <id column="hid" jdbcType="INTEGER" property="hid" />
      <result column="userId" jdbcType="INTEGER" property="userid" />
      <result column="hobbyContent" jdbcType="VARCHAR" property="hobbycontent" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, phone, email, password, email_state_id, nike_name, age, head_photo, area, specialty, 
    description
  </sql>
  <sql id="WithHobbyList">
    u.id, u.phone, u.email, u.password, u.email_state_id, u.nike_name, u.age, u.head_photo, u.area, u.specialty,
    u.description,h.hid,h.userId,h.hobbyContent
  </sql>
  <sql id="WithEventList">
    u.id,u.phone, u.email, u.password, u.email_state_id, u.nike_name, u.age, u.head_photo, u.area, u.specialty,
    u.description,e.eid,e.founderId, e.title, e.type, e.photoName, e.province, e.city, e.detailedDescription, e.createTime,
    e.stateId, e.instruction, e.support
  </sql>
  <select id="searchOneUserByEmail"  parameterType="com.hand.idea.domain.UserExample" resultMap="WithEventResultMap">
    select
    <include refid="WithEventList" />
    from idea_user u left join idea_event e on u.`id`=e.`founderId`
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="searchOneUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from idea_user
    where email = #{email,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectUserOrUnique" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from idea_user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectByExampleWithHobby" parameterType="com.hand.idea.domain.UserExample" resultMap="HobbyResultMap">
    select
    <include refid="WithHobbyList" />
    from idea_user u left join idea_hobby h on u.`id`=h.`userId`
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithEvent" parameterType="com.hand.idea.domain.UserExample" resultMap="WithEventResultMap">
    select
    <include refid="WithEventList" />
    from idea_user u left join idea_event e on u.`id`=e.`founderId`
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.hand.idea.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from idea_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idea_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idea_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hand.idea.domain.UserExample">
    delete from idea_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hand.idea.domain.User">
    insert into idea_user (id, phone, email, 
      password, email_state_id, nike_name, 
      age, head_photo, area, 
      specialty, description)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{emailStateId,jdbcType=INTEGER}, #{nikeName,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{headPhoto,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{specialty,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hand.idea.domain.User">
    insert into idea_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nikeName != null">
        nike_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nikeName != null">
        #{nikeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hand.idea.domain.UserExample" resultType="java.lang.Long">
    select count(*) from idea_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update idea_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.emailStateId != null">
        email_state_id = #{record.emailStateId,jdbcType=INTEGER},
      </if>
      <if test="record.nikeName != null">
        nike_name = #{record.nikeName,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.headPhoto != null">
        head_photo = #{record.headPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.specialty != null">
        specialty = #{record.specialty,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update idea_user
    set id = #{record.id,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email_state_id = #{record.emailStateId,jdbcType=INTEGER},
      nike_name = #{record.nikeName,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      head_photo = #{record.headPhoto,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hand.idea.domain.User">
    update idea_user
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="emailStateId != null">
        email_state_id = #{emailStateId,jdbcType=INTEGER},
      </if>
      <if test="nikeName != null">
        nike_name = #{nikeName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="headPhoto != null">
        head_photo = #{headPhoto,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hand.idea.domain.User">
    update idea_user
    set phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email_state_id = #{emailStateId,jdbcType=INTEGER},
      nike_name = #{nikeName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      head_photo = #{headPhoto,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>